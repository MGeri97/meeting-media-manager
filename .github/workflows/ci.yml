name: ci

on:
  workflow_dispatch:
  pull_request:
    branches: [main, master]
  push:
    paths:
      - '.electron-nuxt/**/*'
      - 'builder.config.js'
      - 'package.json'
      - 'playwright.config.ts'
      - 'src/main/**/*'
      - 'src/renderer/nuxt.config.js'
      - 'tests/**/*.test.ts'
      - 'yarn.lock'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Run linter
        run: yarn lint

  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Set env variables
        run: |
          touch .env
          echo SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }} >> .env
          echo SENTRY_ORG=${{ secrets.SENTRY_ORG }} >> .env
          echo SENTRY_PROJECT=${{ secrets.SENTRY_PROJECT }} >> .env
          echo SENTRY_DSN=${{ secrets.SENTRY_DSN }} >> .env
          echo SENTRY_DISABLE=1 >> .env

      - name: Build Electron app
        env:
          GH_TOKEN: ${{ secrets.github_token }}
        run: yarn build -p never

      - name: Run tests
        run: yarn test
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 30

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Set env variables
        run: |
          touch .env
          echo SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }} >> .env
          echo SENTRY_ORG=${{ secrets.SENTRY_ORG }} >> .env
          echo SENTRY_PROJECT=${{ secrets.SENTRY_PROJECT }} >> .env
          echo SENTRY_DSN=${{ secrets.SENTRY_DSN }} >> .env

      - name: Upload source maps to Sentry
        if: |
          !startsWith(github.ref, 'refs/tags/v') &&
          startsWith(github.event.head_commit.message, 'chore(release)')
        run: echo SENTRY_SOURCE_MAPS=1 >> .env

      - name: Build Electron app
        if: |
          startsWith(github.ref, 'refs/tags/v') ||
          !startsWith(github.event.head_commit.message, 'chore(release)')
        env:
          GH_TOKEN: ${{ secrets.github_token }}
        run: yarn run build -p never

      - name: Release Electron app
        if: |
          !startsWith(github.ref, 'refs/tags/v') &&
          startsWith(github.event.head_commit.message, 'chore(release)')
        env:
          GH_TOKEN: ${{ secrets.github_token }}
        run: yarn run build -p onTagOrDraft
