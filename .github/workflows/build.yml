name: build/release

on:
  workflow_dispatch:
  pull_request:
    branches: [main, master]
  push:
    paths:
      - '.electron-nuxt/**/*'
      - 'builder.config.js'
      - 'package.json'
      - 'src/main/**/*'
      - 'src/renderer/nuxt.config.js'
      - 'yarn.lock'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true
          cache: 'yarn'

      - name: Install yarn@latest
        run: yarn set version stable

      - name: Install dependencies
        run: yarn install

      - name: Run linter
        run: yarn lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true
          cache: 'yarn'

      - name: Install yarn@latest
        run: yarn set version stable

      - name: Install dependencies
        run: yarn install

      - name: Set env variables
        run: |
          touch .env
          echo SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }} >> .env
          echo SENTRY_ORG=${{ secrets.SENTRY_ORG }} >> .env
          echo SENTRY_PROJECT=${{ secrets.SENTRY_PROJECT }} >> .env
          echo SENTRY_DSN=${{ secrets.SENTRY_DSN }} >> .env

      - name: Build Electron app
        run: yarn build

      - name: Run tests
        run: yarn test

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true
          cache: 'yarn'

      - name: Install yarn@latest
        run: yarn set version stable

      - name: Install dependencies
        run: yarn install

      - name: Set env variables
        run: |
          touch .env
          echo SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }} >> .env
          echo SENTRY_ORG=${{ secrets.SENTRY_ORG }} >> .env
          echo SENTRY_PROJECT=${{ secrets.SENTRY_PROJECT }} >> .env
          echo SENTRY_DSN=${{ secrets.SENTRY_DSN }} >> .env

      - name: Build/release Electron app
        env:
          GH_TOKEN: ${{ secrets.github_token }}
        run: yarn run build -p onTagOrDraft
